Google Form : 


1. 
Question : "რა არის !important-ი css-ში და შეგვიძლია თუ არა მისი გამოყენება tailwind-ში?" 
Answer : !important გამოიყენება თვისების/მნიშვნელობისთვის ჩვეულებრივზე მეტი მნიშვნელობის მისაცემად. Tailwind-ის დროს, თვითონ კლასის სტილს უნდა დავუწეროთ პირველად, მაგალითად "!text-black"
--------
2. 
Question : "რა არის <iframe>?" 
Answer : ჩარჩო სადაც შეგვიძლია ჩავსვათ ინფორმაციები მაგალითად google map, google translate
--------
3.
Question : "მოიყვანეთ სემანტიკური ელემენტების მაგალითები" 
Answer : header, footer, article და ა.შ, სემანტიკური ელემენტები ჰქვიათ რადგან თვითონ სახელი არჭერს მის მნიშვნელობას
--------
4.
Question : "რა განსხვავებებია position: relative-ს, fixed-ს, absolute-სა და sticky-ის შორის?" 
Answer : relative-თავისი ადგილიდან მოძრაობს, absolute გლობალურად (body)დან მოძრაობს, fixed ერთ ადგილას რჩება და არ მოძრაობს, sticky დასქროვლის დროს სულ ზევით გამოჩნდება
--------
5.
Question : "რითი განსხვავდება rem და em-ი ერთმანეთისგან?" 
Answer : საზომი ერთეულებია ორივე
--------
6.
Question : "რა არის ვირტუალური DOM-ი?" 
Answer : რეალური dom-ის კოპირება რომელის საშუალებითაც react-ს საშუალებას აძლევს უფრო ეფექტურად მართოს ცვლილებები რეალურ DOM-ზე საჭირო პირდაპირი მანიპულირების მინიმიზაციით
--------
7.
Question : "რა არის useEffect-ის გამოყენების მიზანი?"
Answer : useEffect-ი საშუალებას გვაძლევს რომ კომპონენტებში გვერდითი ეფექტები შევასრულოთ. მაგალითად fetching data, DOM-ის პირდაპირი განახლება
--------
8.
Question : "რა არის Zustand-ი?" 
Answer : Zustand არის ბიბლიოთეკა რომელიც უზრუნველყოფს react-ის hook-ების მდგომარეობის სამართავად
--------
9.
Question : "რა არის და როგორ შვქმნათ დინამიური როუთი Next.js-ში" 
Answer : React-ში დინამიური როუთი გულისხმობს დინამიური მონაცემების ან პარამეტრების საფუძველზე როუთის შექმნის პროცესს. დინამიური როუთისთვის ფოლდერი უნდა შევქმნათ და ფოლდერს დავარქვათ [pages] , შემდეგ, file-ებს უნდა დავარვათ "page.tsx".
--------
10.
Question : "რისთვის ამოიყენება (home) ფოლდერის დასახლება Next-ში. " 
Answer : url-ს აიგნორებს 
--------
 
11.
Question: "რა განსხვავებაა useState-ით, useRef-ით და უბრალოდ `let a = 5`-ით შექმნილ ცვლადებს შორის?"
Answer:
-----------

12.

Question: "რისთვის გვჭირდება setState?"
Answer: setState React-ს ეუბნება რომ მისი მდგომარეობა შეიცვალა და რომ მან კომპონენტის ხელახლა რენდერინგი უნდა განიხილოს.
-----------

13.

Question: "რისთვის გვჭირდება return-ი useEffect-ში?"
Answer: გასუფთავებისთვის, ან როდესაც მომხმარებელი ტოვებს გვერდს და კომპონენტი გამოირთვება.
-----------


App.jsx-ში არესბული კოდის მიხედვით ჩასვით პასუხები.

14.

Question: "რა არის საწყისი მნიშვნელობა popupTitle state-ის?"
Answer: ცარიელი სტრინგი
-----------

15.

Question: "რას აკეთებს togglePopup ფუნქცია?"
Answer: popup-ს გვაძლევს რომელსაც ინფორმაცია აქვს "Hide Popup" : "Show Popup" და დაქლიქების მიხედვით ინფორმაცია შეიცვლება 
-----------

16.

Question: "რას აკეთებს handleTitleChange ფუნქცია?"
Answer: popup-ის title-ს ცვლის დაქლიქების პერიოდში
-----------

17.

Question: "რას აკეთებს handleMessageChange ფუნქცია?"
Answer: popup-ის მესიჯს ცვლის დაქლიქების პერიოდში
-----------

18.

Question: `{isPopupVisible ? 'Hide Popup' : 'Show Popup'}` რას აკეთებს ეს კონკრეტული ბრძანება?
Answer: თუ pop-up-ს ვხედავთ, მაშინ 'Hide Popup'-ს გვაჩვენებს, თუ pop-up-ს არ ვხედავთ 'Show Popup'-ს გვაჩვენებს
-----------

19.

Question: `{isPopupVisible && (code)}` რისთვის გამოიყენება `&&` სიმბოლო?
Answer: && არის "და" სიმბოლო, ანუ isPopupVisible და (code) ერთ ბრძანებას მიიღებს
-----------
